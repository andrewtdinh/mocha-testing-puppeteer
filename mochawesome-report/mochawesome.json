{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2019-04-11T06:46:55.484Z",
    "end": "2019-04-11T06:47:15.182Z",
    "duration": 19698,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "60d0e3c5-c3cd-46c0-afcf-61f998e2157f",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [
      {
        "title": "\"before all\" hook",
        "fullTitle": "\"before all\" hook",
        "timedOut": false,
        "duration": 1124,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "global.expect = expect;\nglobal.browser = await puppeteer.launch(opts);",
        "err": {},
        "isRoot": true,
        "uuid": "a3913f8d-6503-4208-ab2b-9a351bf7ddd9",
        "isHook": true,
        "skipped": false
      }
    ],
    "afterHooks": [
      {
        "title": "\"after all\" hook",
        "fullTitle": "\"after all\" hook",
        "timedOut": false,
        "duration": 86,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "browser.close();\nglobal.browser = globalVariables.browser;\nglobal.expect = globalVariables.expect;\nsetTimeout(() => { cmd.run('node server.js'); }, 5000); \nsetTimeout(() => { opn('http://localhost:9988'); }, 2000);",
        "err": {},
        "isRoot": true,
        "uuid": "21ad2a23-386d-4085-8a53-1679c83b36a3",
        "isHook": true,
        "skipped": false
      }
    ],
    "tests": [],
    "suites": [
      {
        "uuid": "4e944222-40df-45f5-91aa-ff8531176e50",
        "title": "simple test for Linkedin Login functionality",
        "fullFile": "/Users/andrewd/Personal/mocha-testing-puppeteer/test/sample.spec.js",
        "file": "/test/sample.spec.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "simple test for Linkedin Login functionality \"before all\" hook",
            "timedOut": false,
            "duration": 2288,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "/* before hook for mocha testing */\n   page = await browser.newPage();\n   await page.goto(\"https://www.linkedin.com/\");\n   await page.setViewport({ width: 1920, height: 1040 });",
            "err": {},
            "isRoot": false,
            "uuid": "2feebd9a-eaed-4b83-b125-feca768d125d",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "simple test for Linkedin Login functionality \"after all\" hook",
            "timedOut": false,
            "duration": 165,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "/* after hook for mocha testing */\n    await page.close();",
            "err": {},
            "isRoot": false,
            "uuid": "5fcb8735-dd2c-4b45-be50-cd3c14c0ddec",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should login to home page",
            "fullTitle": "simple test for Linkedin Login functionality should login to home page",
            "timedOut": false,
            "duration": 10952,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "/* simple test case */\n   const emailInput = \"#login-email\";\n   const passwordInput = \"#login-password\";\n   const submitSelector = \"#login-submit\";\n   linkEmail = await page.$(emailInput);\n   linkPassword = await page.$(passwordInput);\n   linkSubmit = await page.$(submitSelector);\n   await linkEmail.click({ clickCount: 3 });\n   await linkEmail.type(process.env.LINKEDIN_USER); // add the email address for linkedin //\n   await linkPassword.click({ clickCount: 3 });\n   await linkPassword.type(process.env.LINKEDIN_PASSWORD); // add password for linkedin account\n   await linkSubmit.click();\n   await page.waitFor(3000);",
            "err": {},
            "isRoot": false,
            "uuid": "67d41aa5-dc53-46f3-8f60-3dc58d04f958",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "67d41aa5-dc53-46f3-8f60-3dc58d04f958"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 10952,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      },
      {
        "uuid": "d057925c-5e33-4854-9eb0-20334a8e4c17",
        "title": "simple test for Linkedin Login functionality",
        "fullFile": "/Users/andrewd/Personal/mocha-testing-puppeteer/test/upwork/upwork_login.spec.js",
        "file": "/test/upwork/upwork_login.spec.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "simple test for Linkedin Login functionality \"before all\" hook",
            "timedOut": false,
            "duration": 4527,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "/* before hook for mocha testing */\n   page = await browser.newPage();\n   await page.goto(\"https://www.linkedin.com/\");\n   await page.setViewport({ width: 1920, height: 1040 });",
            "err": {},
            "isRoot": false,
            "uuid": "d3298e03-b9f7-4dc9-9a02-a1c04e731055",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "simple test for Linkedin Login functionality \"after all\" hook",
            "timedOut": false,
            "duration": 128,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "/* after hook for mocha testing */\n    await page.close();",
            "err": {},
            "isRoot": false,
            "uuid": "f8e28dc0-75f5-4f56-91b1-bd05ece8eb94",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should login to home page",
            "fullTitle": "simple test for Linkedin Login functionality should login to home page",
            "timedOut": false,
            "duration": 417,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "/* simple test case */\n   const emailInput = \"#login-email\";\n   const passwordInput = \"#login-password\";\n   const submitSelector = \"#login-submit\";\n   linkEmail = await page.$(emailInput);\n   linkPassword = await page.$(passwordInput);\n   linkSubmit = await page.$(submitSelector);\n   await linkEmail.click({ clickCount: 3 });\n   await linkEmail.type(process.env.LINKEDIN_USER); // add the email address for linkedin //\n   await linkPassword.click({ clickCount: 3 });\n   await linkPassword.type(process.env.LINKEDIN_PASSWORD); // add password for linkedin account\n   await linkSubmit.click();\n   await page.waitFor(3000);",
            "err": {
              "message": "TypeError: Cannot read property 'click' of null",
              "estack": "TypeError: Cannot read property 'click' of null\n    at Context.it (test/upwork/upwork_login.spec.js:26:21)"
            },
            "isRoot": false,
            "uuid": "26240dce-06e8-49cd-a7e2-af3033c1fb7c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [
          "26240dce-06e8-49cd-a7e2-af3033c1fb7c"
        ],
        "pending": [],
        "skipped": [],
        "duration": 417,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 0
  },
  "copyrightYear": 2019
}